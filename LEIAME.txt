
üòÉ Usando API Node üòÉ


‚úî 0. Criar um servidor de banco de dados MySQL na Azure.

- User: <Qualquer nome>
- Pass: <Qualquer senha que n√£o contenha o caracter '@'>

‚öΩ Obs.: Sugest√£o:
User: tux
Pass: ABC123xyz


‚öΩ Obs.: Ap√≥s o servidor estar provisionado:
- Menu Configura√ß√µes -> Par√¢metros do servidor -> require_secure_transport OFF


‚úî 1. Criar um diret√≥rio e descompactar o arquivo api.zip ou clonar a aplica√ß√£o Node do Github na VM Debian GNU/Linux.

‚ùØ mkdir api && cd api
‚ùØ unzip api.zip

<OU>

‚ùØ mkdir api && cd api
‚ùØ git clone https://github.com/roger437linux/acme.git


‚úî 2. Configurar o USER, PASSWORD e ADDRESS do servidor MySQL na aplica√ß√£o Node.

‚ùØ export USER="seu_usuario"
‚ùØ export PASSWORD="sua_senha"
‚ùØ export HOST="seu_host"


‚úî 3. Criar banco de dados se restaurar tabelas.

‚ùØ cd acme
‚ùØ mysql -u$USER -p$PASSWORD -h$HOST -e "CREATE DATABASE acme_filmes"
‚ùØ mysql -u$USER -p$PASSWORD -h$HOST acme_filmes < acme.sql
‚ùØ mysql -u$USER -p$PASSWORD -h$HOST -e "SHOW TABLES" acme_filmes


‚úî 4. Executar a aplica√ß√£o Node localmente.

‚ùØ npm i
‚ùØ node server.js

‚öΩ Obs.: Havendo erro de execu√ß√£o do Prisma, execute:
‚ùØ npx prisma generate


‚úî 5. Verificar no navegador de internet do host hospedeiro.

http://<IPVM>:8080/acmefilmes/filmes


‚úî 6. Dockerizar a aplica√ß√£o web node [Criar nova imagem Docker]

‚öΩ Obs.: Criar novo reposit√≥rio no Docker Hub chamado "acme".

‚ùØ ACCOUNT=<YOUR_DOCKER_HUB_ACCOUNT>
‚ùØ docker build --tag $ACCOUNT/acme .


‚úî 7. Criar cont√™iner para testar a nova imagem e verificar no navegador de internet do host hospedeiro.

‚ùØ docker run -d --rm --name acme -p 8080:8080 -e USER=$USER -e PASSWORD=$PASSWORD -e HOST=$HOST $ACCOUNT/acme

http://<IPVM>:8080/acmefilmes/filmes



8. Enviar nova imagem para o Docker Hub

‚ùØ docker push $ACCOUNT/acme



---------------------------------------------------------------------------------------------------



9. Criar servi√ßo de aplicativo Azure utilizando a imagem enviando ao Docker Hub.


10. Criar Inst√¢ncia de Container Azure [ACI] utilizando a imagem enviando ao Docker Hub.



---------------------------------------------------------------------------------------------------



‚ùØ sgpt "Tenho uma aplica√ß√£o de api em nodejs usando o prisma. Preciso criar vari√°veis de ambiente no sistema operacional e poder utilizar essas
 vari√°veis de ambiente em uma string de conex√£o dentro do arquivo .env do prisma, como fa√ßo isso?"
Para usar vari√°veis de ambiente no arquivo .env do Prisma, voc√™ pode definir as vari√°veis no sistema operacional e referenci√°-las no arquivo
.env. Aqui est√° um passo a passo:

 1 Defina as vari√°veis de ambiente no sistema operacional:
   No Linux, voc√™ pode adicionar as vari√°veis ao arquivo ~/.zshrc para que sejam carregadas sempre que abrir um terminal:

    export DATABASE_USER="seu_usuario"
    export DATABASE_PASSWORD="sua_senha"
    export DATABASE_HOST="seu_host"
    export DATABASE_PORT="sua_porta"
    export DATABASE_NAME="seu_banco"

   Ap√≥s adicionar, recarregue o arquivo:

    source ~/.zshrc

 2 Use as vari√°veis no arquivo .env do Prisma:
   No arquivo .env, voc√™ pode referenciar as vari√°veis de ambiente usando a sintaxe ${VARIAVEL}:

    DATABASE_URL="postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?schema=public"

 3 Certifique-se de que o Prisma est√° configurado para usar o arquivo .env:
   O Prisma, por padr√£o, l√™ o arquivo .env na raiz do projeto. Certifique-se de que o arquivo est√° no local correto e que o Prisma est√°
   configurado para us√°-lo.

Com isso, sua string de conex√£o usar√° as vari√°veis de ambiente definidas no sistema.
~ ‚ùØ

